//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace AppStudio
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace AppStudio.AppStudio_Windows_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[80];
            _typeNameTable[0] = "AppStudio.Controls.Html2Xaml.Properties";
            _typeNameTable[1] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[2] = "String";
            _typeNameTable[3] = "AppStudio.Controls.VariableSizedGrid";
            _typeNameTable[4] = "Windows.UI.Xaml.Controls.GridView";
            _typeNameTable[5] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[6] = "AppStudio.Commands.ItemClickCommand";
            _typeNameTable[7] = "Object";
            _typeNameTable[8] = "System.Windows.Input.ICommand";
            _typeNameTable[9] = "AppStudio.Controls.TextPlainConverter";
            _typeNameTable[10] = "AppStudio.Controls.ThumbnailConverter";
            _typeNameTable[11] = "AppStudio.Controls.VisibilityConverter";
            _typeNameTable[12] = "AppStudio.Controls.BoolToVisibilityConverter";
            _typeNameTable[13] = "AppStudio.ActionCommands";
            _typeNameTable[14] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[15] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[16] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[17] = "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior";
            _typeNameTable[18] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[19] = "Microsoft.Xaml.Interactions.Core.ComparisonConditionType";
            _typeNameTable[20] = "System.Enum";
            _typeNameTable[21] = "System.ValueType";
            _typeNameTable[22] = "Microsoft.Xaml.Interactions.Core.GoToStateAction";
            _typeNameTable[23] = "Boolean";
            _typeNameTable[24] = "Windows.UI.Xaml.FrameworkElement";
            _typeNameTable[25] = "AppStudio.Controls.YouTubeViewer";
            _typeNameTable[26] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[27] = "AppStudio.NavigationHelper";
            _typeNameTable[28] = "AppStudio.Controls.WebControl";
            _typeNameTable[29] = "AppStudio.Views.AboutFlyout";
            _typeNameTable[30] = "Windows.UI.Xaml.Controls.SettingsFlyout";
            _typeNameTable[31] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[32] = "AppStudio.ViewModels.AboutThisAppViewModel";
            _typeNameTable[33] = "AppStudio.Views.PrivacyFlyout";
            _typeNameTable[34] = "AppStudio.ViewModels.PrivacyViewModel";
            _typeNameTable[35] = "AppStudio.Data.BindableBase";
            _typeNameTable[36] = "AppStudio.Views.ImageViewer";
            _typeNameTable[37] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[38] = "Microsoft.Advertising.WinRT.UI.AdControl";
            _typeNameTable[39] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[40] = "Double";
            _typeNameTable[41] = "AppStudio.Views.MainPage";
            _typeNameTable[42] = "AppStudio.ViewModels.MainViewModel";
            _typeNameTable[43] = "AppStudio.Views.GUITARPage";
            _typeNameTable[44] = "AppStudio.ViewModels.GUITARViewModel";
            _typeNameTable[45] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.GUITARSchema>";
            _typeNameTable[46] = "AppStudio.ViewModels.ViewModelBase";
            _typeNameTable[47] = "AppStudio.Views.VIOLINPage";
            _typeNameTable[48] = "AppStudio.ViewModels.VIOLINViewModel";
            _typeNameTable[49] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.VIOLINSchema>";
            _typeNameTable[50] = "AppStudio.Views.KEYBOARDPage";
            _typeNameTable[51] = "AppStudio.ViewModels.KEYBOARDViewModel";
            _typeNameTable[52] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.KEYBOARDSchema>";
            _typeNameTable[53] = "AppStudio.Views.DRUMSPage";
            _typeNameTable[54] = "AppStudio.ViewModels.DRUMSViewModel";
            _typeNameTable[55] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.DRUMSSchema>";
            _typeNameTable[56] = "AppStudio.Views.MUSICALINSTRUMENTSList";
            _typeNameTable[57] = "AppStudio.ViewModels.MUSICALINSTRUMENTSViewModel";
            _typeNameTable[58] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.MUSICALINSTRUMENTSSchema>";
            _typeNameTable[59] = "AppStudio.Views.MUSICALINSTRUMENTSDetail";
            _typeNameTable[60] = "AppStudio.Views.TYPESOFINSTRUMENTSList";
            _typeNameTable[61] = "AppStudio.ViewModels.TYPESOFINSTRUMENTSViewModel";
            _typeNameTable[62] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.TYPESOFINSTRUMENTSSchema>";
            _typeNameTable[63] = "AppStudio.Views.TYPESOFINSTRUMENTSDetail";
            _typeNameTable[64] = "AppStudio.Views.GUITARList";
            _typeNameTable[65] = "AppStudio.Views.VIOLINList";
            _typeNameTable[66] = "AppStudio.Views.KEYBOARDList";
            _typeNameTable[67] = "AppStudio.Views.DRUMSList";
            _typeNameTable[68] = "AppStudio.Views.GUITARDetail";
            _typeNameTable[69] = "AppStudio.Views.VIOLINDetail";
            _typeNameTable[70] = "AppStudio.Views.KEYBOARDDetail";
            _typeNameTable[71] = "AppStudio.Views.DRUMSDetail";
            _typeNameTable[72] = "AppStudio.Views.MUsIcNEWSList";
            _typeNameTable[73] = "AppStudio.ViewModels.MUsIcNEWSViewModel";
            _typeNameTable[74] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.RssSchema>";
            _typeNameTable[75] = "AppStudio.Views.MUsIcNEWSDetail";
            _typeNameTable[76] = "AppStudio.Views.ViSuAlSList";
            _typeNameTable[77] = "AppStudio.ViewModels.ViSuAlSViewModel";
            _typeNameTable[78] = "AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.YouTubeSchema>";
            _typeNameTable[79] = "AppStudio.Views.ViSuAlSDetail";

            _typeTable = new global::System.Type[80];
            _typeTable[0] = typeof(global::AppStudio.Controls.Html2Xaml.Properties);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[2] = typeof(global::System.String);
            _typeTable[3] = typeof(global::AppStudio.Controls.VariableSizedGrid);
            _typeTable[4] = typeof(global::Windows.UI.Xaml.Controls.GridView);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[6] = typeof(global::AppStudio.Commands.ItemClickCommand);
            _typeTable[7] = typeof(global::System.Object);
            _typeTable[8] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[9] = typeof(global::AppStudio.Controls.TextPlainConverter);
            _typeTable[10] = typeof(global::AppStudio.Controls.ThumbnailConverter);
            _typeTable[11] = typeof(global::AppStudio.Controls.VisibilityConverter);
            _typeTable[12] = typeof(global::AppStudio.Controls.BoolToVisibilityConverter);
            _typeTable[13] = typeof(global::AppStudio.ActionCommands);
            _typeTable[14] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[15] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[16] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[17] = typeof(global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior);
            _typeTable[18] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[19] = typeof(global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType);
            _typeTable[20] = typeof(global::System.Enum);
            _typeTable[21] = typeof(global::System.ValueType);
            _typeTable[22] = typeof(global::Microsoft.Xaml.Interactions.Core.GoToStateAction);
            _typeTable[23] = typeof(global::System.Boolean);
            _typeTable[24] = typeof(global::Windows.UI.Xaml.FrameworkElement);
            _typeTable[25] = typeof(global::AppStudio.Controls.YouTubeViewer);
            _typeTable[26] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[27] = typeof(global::AppStudio.NavigationHelper);
            _typeTable[28] = typeof(global::AppStudio.Controls.WebControl);
            _typeTable[29] = typeof(global::AppStudio.Views.AboutFlyout);
            _typeTable[30] = typeof(global::Windows.UI.Xaml.Controls.SettingsFlyout);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[32] = typeof(global::AppStudio.ViewModels.AboutThisAppViewModel);
            _typeTable[33] = typeof(global::AppStudio.Views.PrivacyFlyout);
            _typeTable[34] = typeof(global::AppStudio.ViewModels.PrivacyViewModel);
            _typeTable[35] = typeof(global::AppStudio.Data.BindableBase);
            _typeTable[36] = typeof(global::AppStudio.Views.ImageViewer);
            _typeTable[37] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[38] = typeof(global::Microsoft.Advertising.WinRT.UI.AdControl);
            _typeTable[39] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[40] = typeof(global::System.Double);
            _typeTable[41] = typeof(global::AppStudio.Views.MainPage);
            _typeTable[42] = typeof(global::AppStudio.ViewModels.MainViewModel);
            _typeTable[43] = typeof(global::AppStudio.Views.GUITARPage);
            _typeTable[44] = typeof(global::AppStudio.ViewModels.GUITARViewModel);
            _typeTable[45] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.GUITARSchema>);
            _typeTable[46] = typeof(global::AppStudio.ViewModels.ViewModelBase);
            _typeTable[47] = typeof(global::AppStudio.Views.VIOLINPage);
            _typeTable[48] = typeof(global::AppStudio.ViewModels.VIOLINViewModel);
            _typeTable[49] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.VIOLINSchema>);
            _typeTable[50] = typeof(global::AppStudio.Views.KEYBOARDPage);
            _typeTable[51] = typeof(global::AppStudio.ViewModels.KEYBOARDViewModel);
            _typeTable[52] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.KEYBOARDSchema>);
            _typeTable[53] = typeof(global::AppStudio.Views.DRUMSPage);
            _typeTable[54] = typeof(global::AppStudio.ViewModels.DRUMSViewModel);
            _typeTable[55] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.DRUMSSchema>);
            _typeTable[56] = typeof(global::AppStudio.Views.MUSICALINSTRUMENTSList);
            _typeTable[57] = typeof(global::AppStudio.ViewModels.MUSICALINSTRUMENTSViewModel);
            _typeTable[58] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.MUSICALINSTRUMENTSSchema>);
            _typeTable[59] = typeof(global::AppStudio.Views.MUSICALINSTRUMENTSDetail);
            _typeTable[60] = typeof(global::AppStudio.Views.TYPESOFINSTRUMENTSList);
            _typeTable[61] = typeof(global::AppStudio.ViewModels.TYPESOFINSTRUMENTSViewModel);
            _typeTable[62] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.TYPESOFINSTRUMENTSSchema>);
            _typeTable[63] = typeof(global::AppStudio.Views.TYPESOFINSTRUMENTSDetail);
            _typeTable[64] = typeof(global::AppStudio.Views.GUITARList);
            _typeTable[65] = typeof(global::AppStudio.Views.VIOLINList);
            _typeTable[66] = typeof(global::AppStudio.Views.KEYBOARDList);
            _typeTable[67] = typeof(global::AppStudio.Views.DRUMSList);
            _typeTable[68] = typeof(global::AppStudio.Views.GUITARDetail);
            _typeTable[69] = typeof(global::AppStudio.Views.VIOLINDetail);
            _typeTable[70] = typeof(global::AppStudio.Views.KEYBOARDDetail);
            _typeTable[71] = typeof(global::AppStudio.Views.DRUMSDetail);
            _typeTable[72] = typeof(global::AppStudio.Views.MUsIcNEWSList);
            _typeTable[73] = typeof(global::AppStudio.ViewModels.MUsIcNEWSViewModel);
            _typeTable[74] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.RssSchema>);
            _typeTable[75] = typeof(global::AppStudio.Views.MUsIcNEWSDetail);
            _typeTable[76] = typeof(global::AppStudio.Views.ViSuAlSList);
            _typeTable[77] = typeof(global::AppStudio.ViewModels.ViSuAlSViewModel);
            _typeTable[78] = typeof(global::AppStudio.ViewModels.ViewModelBase<global::AppStudio.Data.YouTubeSchema>);
            _typeTable[79] = typeof(global::AppStudio.Views.ViSuAlSDetail);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_Properties() { return new global::AppStudio.Controls.Html2Xaml.Properties(); }
        private object Activate_3_VariableSizedGrid() { return new global::AppStudio.Controls.VariableSizedGrid(); }
        private object Activate_6_ItemClickCommand() { return new global::AppStudio.Commands.ItemClickCommand(); }
        private object Activate_9_TextPlainConverter() { return new global::AppStudio.Controls.TextPlainConverter(); }
        private object Activate_10_ThumbnailConverter() { return new global::AppStudio.Controls.ThumbnailConverter(); }
        private object Activate_11_VisibilityConverter() { return new global::AppStudio.Controls.VisibilityConverter(); }
        private object Activate_12_BoolToVisibilityConverter() { return new global::AppStudio.Controls.BoolToVisibilityConverter(); }
        private object Activate_13_ActionCommands() { return new global::AppStudio.ActionCommands(); }
        private object Activate_15_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_17_DataTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior(); }
        private object Activate_18_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_22_GoToStateAction() { return new global::Microsoft.Xaml.Interactions.Core.GoToStateAction(); }
        private object Activate_25_YouTubeViewer() { return new global::AppStudio.Controls.YouTubeViewer(); }
        private object Activate_28_WebControl() { return new global::AppStudio.Controls.WebControl(); }
        private object Activate_29_AboutFlyout() { return new global::AppStudio.Views.AboutFlyout(); }
        private object Activate_32_AboutThisAppViewModel() { return new global::AppStudio.ViewModels.AboutThisAppViewModel(); }
        private object Activate_33_PrivacyFlyout() { return new global::AppStudio.Views.PrivacyFlyout(); }
        private object Activate_34_PrivacyViewModel() { return new global::AppStudio.ViewModels.PrivacyViewModel(); }
        private object Activate_36_ImageViewer() { return new global::AppStudio.Views.ImageViewer(); }
        private object Activate_38_AdControl() { return new global::Microsoft.Advertising.WinRT.UI.AdControl(); }
        private object Activate_41_MainPage() { return new global::AppStudio.Views.MainPage(); }
        private object Activate_42_MainViewModel() { return new global::AppStudio.ViewModels.MainViewModel(); }
        private object Activate_43_GUITARPage() { return new global::AppStudio.Views.GUITARPage(); }
        private object Activate_44_GUITARViewModel() { return new global::AppStudio.ViewModels.GUITARViewModel(); }
        private object Activate_47_VIOLINPage() { return new global::AppStudio.Views.VIOLINPage(); }
        private object Activate_48_VIOLINViewModel() { return new global::AppStudio.ViewModels.VIOLINViewModel(); }
        private object Activate_50_KEYBOARDPage() { return new global::AppStudio.Views.KEYBOARDPage(); }
        private object Activate_51_KEYBOARDViewModel() { return new global::AppStudio.ViewModels.KEYBOARDViewModel(); }
        private object Activate_53_DRUMSPage() { return new global::AppStudio.Views.DRUMSPage(); }
        private object Activate_54_DRUMSViewModel() { return new global::AppStudio.ViewModels.DRUMSViewModel(); }
        private object Activate_56_MUSICALINSTRUMENTSList() { return new global::AppStudio.Views.MUSICALINSTRUMENTSList(); }
        private object Activate_57_MUSICALINSTRUMENTSViewModel() { return new global::AppStudio.ViewModels.MUSICALINSTRUMENTSViewModel(); }
        private object Activate_59_MUSICALINSTRUMENTSDetail() { return new global::AppStudio.Views.MUSICALINSTRUMENTSDetail(); }
        private object Activate_60_TYPESOFINSTRUMENTSList() { return new global::AppStudio.Views.TYPESOFINSTRUMENTSList(); }
        private object Activate_61_TYPESOFINSTRUMENTSViewModel() { return new global::AppStudio.ViewModels.TYPESOFINSTRUMENTSViewModel(); }
        private object Activate_63_TYPESOFINSTRUMENTSDetail() { return new global::AppStudio.Views.TYPESOFINSTRUMENTSDetail(); }
        private object Activate_64_GUITARList() { return new global::AppStudio.Views.GUITARList(); }
        private object Activate_65_VIOLINList() { return new global::AppStudio.Views.VIOLINList(); }
        private object Activate_66_KEYBOARDList() { return new global::AppStudio.Views.KEYBOARDList(); }
        private object Activate_67_DRUMSList() { return new global::AppStudio.Views.DRUMSList(); }
        private object Activate_68_GUITARDetail() { return new global::AppStudio.Views.GUITARDetail(); }
        private object Activate_69_VIOLINDetail() { return new global::AppStudio.Views.VIOLINDetail(); }
        private object Activate_70_KEYBOARDDetail() { return new global::AppStudio.Views.KEYBOARDDetail(); }
        private object Activate_71_DRUMSDetail() { return new global::AppStudio.Views.DRUMSDetail(); }
        private object Activate_72_MUsIcNEWSList() { return new global::AppStudio.Views.MUsIcNEWSList(); }
        private object Activate_73_MUsIcNEWSViewModel() { return new global::AppStudio.ViewModels.MUsIcNEWSViewModel(); }
        private object Activate_75_MUsIcNEWSDetail() { return new global::AppStudio.Views.MUsIcNEWSDetail(); }
        private object Activate_76_ViSuAlSList() { return new global::AppStudio.Views.ViSuAlSList(); }
        private object Activate_77_ViSuAlSViewModel() { return new global::AppStudio.ViewModels.ViSuAlSViewModel(); }
        private object Activate_79_ViSuAlSDetail() { return new global::AppStudio.Views.ViSuAlSDetail(); }
        private void VectorAdd_15_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_18_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  AppStudio.Controls.Html2Xaml.Properties
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_0_Properties;
                userType.AddMemberName("Html");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  String
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  AppStudio.Controls.VariableSizedGrid
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.GridView"));
                userType.Activator = Activate_3_VariableSizedGrid;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  Windows.UI.Xaml.Controls.GridView
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  AppStudio.Commands.ItemClickCommand
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_ItemClickCommand;
                userType.AddMemberName("Command");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  Object
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  System.Windows.Input.ICommand
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 9:   //  AppStudio.Controls.TextPlainConverter
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_TextPlainConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  AppStudio.Controls.ThumbnailConverter
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_ThumbnailConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  AppStudio.Controls.VisibilityConverter
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_11_VisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  AppStudio.Controls.BoolToVisibilityConverter
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_12_BoolToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  AppStudio.ActionCommands
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_13_ActionCommands;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 15:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_15_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 16:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Microsoft.Xaml.Interactions.Core.DataTriggerBehavior
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_17_DataTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("Binding");
                userType.AddMemberName("ComparisonCondition");
                userType.AddMemberName("Value");
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 18:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_18_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  Microsoft.Xaml.Interactions.Core.ComparisonConditionType
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Equal", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.Equal);
                userType.AddEnumValue("NotEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.NotEqual);
                userType.AddEnumValue("LessThan", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.LessThan);
                userType.AddEnumValue("LessThanOrEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.LessThanOrEqual);
                userType.AddEnumValue("GreaterThan", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.GreaterThan);
                userType.AddEnumValue("GreaterThanOrEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.GreaterThanOrEqual);
                xamlType = userType;
                break;

            case 20:   //  System.Enum
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 21:   //  System.ValueType
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 22:   //  Microsoft.Xaml.Interactions.Core.GoToStateAction
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_22_GoToStateAction;
                userType.AddMemberName("StateName");
                userType.AddMemberName("UseTransitions");
                userType.AddMemberName("TargetObject");
                xamlType = userType;
                break;

            case 23:   //  Boolean
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  AppStudio.Controls.YouTubeViewer
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_25_YouTubeViewer;
                userType.AddMemberName("TitleText");
                userType.AddMemberName("SummaryText");
                userType.AddMemberName("EmbedUrl");
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("NetworkAvailable");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  AppStudio.NavigationHelper
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  AppStudio.Controls.WebControl
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_28_WebControl;
                userType.AddMemberName("Html");
                userType.AddMemberName("Source");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  AppStudio.Views.AboutFlyout
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.SettingsFlyout"));
                userType.Activator = Activate_29_AboutFlyout;
                userType.AddMemberName("AboutThisAppModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  Windows.UI.Xaml.Controls.SettingsFlyout
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  AppStudio.ViewModels.AboutThisAppViewModel
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  AppStudio.Views.PrivacyFlyout
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.SettingsFlyout"));
                userType.Activator = Activate_33_PrivacyFlyout;
                userType.AddMemberName("PrivacyViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  AppStudio.ViewModels.PrivacyViewModel
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.Data.BindableBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  AppStudio.Data.BindableBase
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 36:   //  AppStudio.Views.ImageViewer
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_36_ImageViewer;
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 38:   //  Microsoft.Advertising.WinRT.UI.AdControl
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_38_AdControl;
                userType.AddMemberName("ApplicationId");
                userType.AddMemberName("AdUnitId");
                userType.AddMemberName("Latitude");
                userType.AddMemberName("Longitude");
                userType.AddMemberName("IsEngaged");
                userType.AddMemberName("IsAutoRefreshEnabled");
                userType.AddMemberName("IsSuspended");
                xamlType = userType;
                break;

            case 39:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  Double
                xamlType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 41:   //  AppStudio.Views.MainPage
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_41_MainPage;
                userType.AddMemberName("MainViewModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  AppStudio.ViewModels.MainViewModel
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.Data.BindableBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  AppStudio.Views.GUITARPage
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_43_GUITARPage;
                userType.AddMemberName("GUITARModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  AppStudio.ViewModels.GUITARViewModel
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.GUITARSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.GUITARSchema>
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  AppStudio.ViewModels.ViewModelBase
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.Data.BindableBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  AppStudio.Views.VIOLINPage
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_47_VIOLINPage;
                userType.AddMemberName("VIOLINModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 48:   //  AppStudio.ViewModels.VIOLINViewModel
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.VIOLINSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.VIOLINSchema>
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  AppStudio.Views.KEYBOARDPage
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_50_KEYBOARDPage;
                userType.AddMemberName("KEYBOARDModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 51:   //  AppStudio.ViewModels.KEYBOARDViewModel
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.KEYBOARDSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 52:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.KEYBOARDSchema>
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  AppStudio.Views.DRUMSPage
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_53_DRUMSPage;
                userType.AddMemberName("DRUMSModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  AppStudio.ViewModels.DRUMSViewModel
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.DRUMSSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.DRUMSSchema>
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 56:   //  AppStudio.Views.MUSICALINSTRUMENTSList
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_56_MUSICALINSTRUMENTSList;
                userType.AddMemberName("MUSICALINSTRUMENTSModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 57:   //  AppStudio.ViewModels.MUSICALINSTRUMENTSViewModel
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.MUSICALINSTRUMENTSSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 58:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.MUSICALINSTRUMENTSSchema>
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 59:   //  AppStudio.Views.MUSICALINSTRUMENTSDetail
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_59_MUSICALINSTRUMENTSDetail;
                userType.AddMemberName("MUSICALINSTRUMENTSModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 60:   //  AppStudio.Views.TYPESOFINSTRUMENTSList
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_60_TYPESOFINSTRUMENTSList;
                userType.AddMemberName("TYPESOFINSTRUMENTSModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 61:   //  AppStudio.ViewModels.TYPESOFINSTRUMENTSViewModel
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.TYPESOFINSTRUMENTSSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 62:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.TYPESOFINSTRUMENTSSchema>
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 63:   //  AppStudio.Views.TYPESOFINSTRUMENTSDetail
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_63_TYPESOFINSTRUMENTSDetail;
                userType.AddMemberName("TYPESOFINSTRUMENTSModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 64:   //  AppStudio.Views.GUITARList
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_64_GUITARList;
                userType.AddMemberName("GUITARModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 65:   //  AppStudio.Views.VIOLINList
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_65_VIOLINList;
                userType.AddMemberName("VIOLINModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 66:   //  AppStudio.Views.KEYBOARDList
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_66_KEYBOARDList;
                userType.AddMemberName("KEYBOARDModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 67:   //  AppStudio.Views.DRUMSList
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_67_DRUMSList;
                userType.AddMemberName("DRUMSModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 68:   //  AppStudio.Views.GUITARDetail
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_68_GUITARDetail;
                userType.AddMemberName("GUITARModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 69:   //  AppStudio.Views.VIOLINDetail
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_69_VIOLINDetail;
                userType.AddMemberName("VIOLINModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 70:   //  AppStudio.Views.KEYBOARDDetail
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_70_KEYBOARDDetail;
                userType.AddMemberName("KEYBOARDModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 71:   //  AppStudio.Views.DRUMSDetail
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_71_DRUMSDetail;
                userType.AddMemberName("DRUMSModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 72:   //  AppStudio.Views.MUsIcNEWSList
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_72_MUsIcNEWSList;
                userType.AddMemberName("MUsIcNEWSModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 73:   //  AppStudio.ViewModels.MUsIcNEWSViewModel
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.RssSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 74:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.RssSchema>
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 75:   //  AppStudio.Views.MUsIcNEWSDetail
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_75_MUsIcNEWSDetail;
                userType.AddMemberName("MUsIcNEWSModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 76:   //  AppStudio.Views.ViSuAlSList
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_76_ViSuAlSList;
                userType.AddMemberName("ViSuAlSModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 77:   //  AppStudio.ViewModels.ViSuAlSViewModel
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.YouTubeSchema>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 78:   //  AppStudio.ViewModels.ViewModelBase`1<AppStudio.Data.YouTubeSchema>
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.ViewModels.ViewModelBase"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 79:   //  AppStudio.Views.ViSuAlSDetail
                userType = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_79_ViSuAlSDetail;
                userType.AddMemberName("ViSuAlSModel");
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    _otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.Advertising.WinRT.UI.XamlAdControl_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_Properties_Html(object instance)
        {
            return global::AppStudio.Controls.Html2Xaml.Properties.GetHtml((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_0_Properties_Html(object instance, object Value)
        {
            global::AppStudio.Controls.Html2Xaml.Properties.SetHtml((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_1_ItemClickCommand_Command(object instance)
        {
            return global::AppStudio.Commands.ItemClickCommand.GetCommand((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_1_ItemClickCommand_Command(object instance, object Value)
        {
            global::AppStudio.Commands.ItemClickCommand.SetCommand((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Windows.Input.ICommand)Value);
        }
        private object get_2_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_2_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_3_DataTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_4_DataTriggerBehavior_Binding(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Binding;
        }
        private void set_4_DataTriggerBehavior_Binding(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.Binding = (global::System.Object)Value;
        }
        private object get_5_DataTriggerBehavior_ComparisonCondition(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.ComparisonCondition;
        }
        private void set_5_DataTriggerBehavior_ComparisonCondition(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.ComparisonCondition = (global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType)Value;
        }
        private object get_6_DataTriggerBehavior_Value(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Value;
        }
        private void set_6_DataTriggerBehavior_Value(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.Value = (global::System.Object)Value;
        }
        private object get_7_DataTriggerBehavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.AssociatedObject;
        }
        private object get_8_GoToStateAction_StateName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            return that.StateName;
        }
        private void set_8_GoToStateAction_StateName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            that.StateName = (global::System.String)Value;
        }
        private object get_9_GoToStateAction_UseTransitions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            return that.UseTransitions;
        }
        private void set_9_GoToStateAction_UseTransitions(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            that.UseTransitions = (global::System.Boolean)Value;
        }
        private object get_10_GoToStateAction_TargetObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            return that.TargetObject;
        }
        private void set_10_GoToStateAction_TargetObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            that.TargetObject = (global::Windows.UI.Xaml.FrameworkElement)Value;
        }
        private object get_11_YouTubeViewer_TitleText(object instance)
        {
            var that = (global::AppStudio.Controls.YouTubeViewer)instance;
            return that.TitleText;
        }
        private void set_11_YouTubeViewer_TitleText(object instance, object Value)
        {
            var that = (global::AppStudio.Controls.YouTubeViewer)instance;
            that.TitleText = (global::System.String)Value;
        }
        private object get_12_YouTubeViewer_SummaryText(object instance)
        {
            var that = (global::AppStudio.Controls.YouTubeViewer)instance;
            return that.SummaryText;
        }
        private void set_12_YouTubeViewer_SummaryText(object instance, object Value)
        {
            var that = (global::AppStudio.Controls.YouTubeViewer)instance;
            that.SummaryText = (global::System.String)Value;
        }
        private object get_13_YouTubeViewer_EmbedUrl(object instance)
        {
            var that = (global::AppStudio.Controls.YouTubeViewer)instance;
            return that.EmbedUrl;
        }
        private void set_13_YouTubeViewer_EmbedUrl(object instance, object Value)
        {
            var that = (global::AppStudio.Controls.YouTubeViewer)instance;
            that.EmbedUrl = (global::System.String)Value;
        }
        private object get_14_YouTubeViewer_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Controls.YouTubeViewer)instance;
            return that.NavigationHelper;
        }
        private void set_14_YouTubeViewer_NavigationHelper(object instance, object Value)
        {
            var that = (global::AppStudio.Controls.YouTubeViewer)instance;
            that.NavigationHelper = (global::AppStudio.NavigationHelper)Value;
        }
        private object get_15_YouTubeViewer_NetworkAvailable(object instance)
        {
            var that = (global::AppStudio.Controls.YouTubeViewer)instance;
            return that.NetworkAvailable;
        }
        private object get_16_WebControl_Html(object instance)
        {
            var that = (global::AppStudio.Controls.WebControl)instance;
            return that.Html;
        }
        private void set_16_WebControl_Html(object instance, object Value)
        {
            var that = (global::AppStudio.Controls.WebControl)instance;
            that.Html = (global::System.String)Value;
        }
        private object get_17_WebControl_Source(object instance)
        {
            var that = (global::AppStudio.Controls.WebControl)instance;
            return that.Source;
        }
        private void set_17_WebControl_Source(object instance, object Value)
        {
            var that = (global::AppStudio.Controls.WebControl)instance;
            that.Source = (global::System.String)Value;
        }
        private object get_18_AboutFlyout_AboutThisAppModel(object instance)
        {
            var that = (global::AppStudio.Views.AboutFlyout)instance;
            return that.AboutThisAppModel;
        }
        private object get_19_PrivacyFlyout_PrivacyViewModel(object instance)
        {
            var that = (global::AppStudio.Views.PrivacyFlyout)instance;
            return that.PrivacyViewModel;
        }
        private object get_20_ImageViewer_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.ImageViewer)instance;
            return that.NavigationHelper;
        }
        private object get_21_AdControl_ApplicationId(object instance)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            return that.ApplicationId;
        }
        private void set_21_AdControl_ApplicationId(object instance, object Value)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            that.ApplicationId = (global::System.String)Value;
        }
        private object get_22_AdControl_AdUnitId(object instance)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            return that.AdUnitId;
        }
        private void set_22_AdControl_AdUnitId(object instance, object Value)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            that.AdUnitId = (global::System.String)Value;
        }
        private object get_23_AdControl_Latitude(object instance)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            return that.Latitude;
        }
        private void set_23_AdControl_Latitude(object instance, object Value)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            that.Latitude = (global::System.Double)Value;
        }
        private object get_24_AdControl_Longitude(object instance)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            return that.Longitude;
        }
        private void set_24_AdControl_Longitude(object instance, object Value)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            that.Longitude = (global::System.Double)Value;
        }
        private object get_25_AdControl_IsEngaged(object instance)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            return that.IsEngaged;
        }
        private object get_26_AdControl_IsAutoRefreshEnabled(object instance)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            return that.IsAutoRefreshEnabled;
        }
        private void set_26_AdControl_IsAutoRefreshEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            that.IsAutoRefreshEnabled = (global::System.Boolean)Value;
        }
        private object get_27_AdControl_IsSuspended(object instance)
        {
            var that = (global::Microsoft.Advertising.WinRT.UI.AdControl)instance;
            return that.IsSuspended;
        }
        private object get_28_MainPage_MainViewModel(object instance)
        {
            var that = (global::AppStudio.Views.MainPage)instance;
            return that.MainViewModel;
        }
        private object get_29_MainPage_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.MainPage)instance;
            return that.NavigationHelper;
        }
        private object get_30_GUITARPage_GUITARModel(object instance)
        {
            var that = (global::AppStudio.Views.GUITARPage)instance;
            return that.GUITARModel;
        }
        private object get_31_GUITARPage_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.GUITARPage)instance;
            return that.NavigationHelper;
        }
        private object get_32_VIOLINPage_VIOLINModel(object instance)
        {
            var that = (global::AppStudio.Views.VIOLINPage)instance;
            return that.VIOLINModel;
        }
        private object get_33_VIOLINPage_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.VIOLINPage)instance;
            return that.NavigationHelper;
        }
        private object get_34_KEYBOARDPage_KEYBOARDModel(object instance)
        {
            var that = (global::AppStudio.Views.KEYBOARDPage)instance;
            return that.KEYBOARDModel;
        }
        private object get_35_KEYBOARDPage_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.KEYBOARDPage)instance;
            return that.NavigationHelper;
        }
        private object get_36_DRUMSPage_DRUMSModel(object instance)
        {
            var that = (global::AppStudio.Views.DRUMSPage)instance;
            return that.DRUMSModel;
        }
        private object get_37_DRUMSPage_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.DRUMSPage)instance;
            return that.NavigationHelper;
        }
        private object get_38_MUSICALINSTRUMENTSList_MUSICALINSTRUMENTSModel(object instance)
        {
            var that = (global::AppStudio.Views.MUSICALINSTRUMENTSList)instance;
            return that.MUSICALINSTRUMENTSModel;
        }
        private object get_39_MUSICALINSTRUMENTSList_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.MUSICALINSTRUMENTSList)instance;
            return that.NavigationHelper;
        }
        private object get_40_MUSICALINSTRUMENTSDetail_MUSICALINSTRUMENTSModel(object instance)
        {
            var that = (global::AppStudio.Views.MUSICALINSTRUMENTSDetail)instance;
            return that.MUSICALINSTRUMENTSModel;
        }
        private object get_41_MUSICALINSTRUMENTSDetail_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.MUSICALINSTRUMENTSDetail)instance;
            return that.NavigationHelper;
        }
        private object get_42_TYPESOFINSTRUMENTSList_TYPESOFINSTRUMENTSModel(object instance)
        {
            var that = (global::AppStudio.Views.TYPESOFINSTRUMENTSList)instance;
            return that.TYPESOFINSTRUMENTSModel;
        }
        private object get_43_TYPESOFINSTRUMENTSList_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.TYPESOFINSTRUMENTSList)instance;
            return that.NavigationHelper;
        }
        private object get_44_TYPESOFINSTRUMENTSDetail_TYPESOFINSTRUMENTSModel(object instance)
        {
            var that = (global::AppStudio.Views.TYPESOFINSTRUMENTSDetail)instance;
            return that.TYPESOFINSTRUMENTSModel;
        }
        private object get_45_TYPESOFINSTRUMENTSDetail_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.TYPESOFINSTRUMENTSDetail)instance;
            return that.NavigationHelper;
        }
        private object get_46_GUITARList_GUITARModel(object instance)
        {
            var that = (global::AppStudio.Views.GUITARList)instance;
            return that.GUITARModel;
        }
        private object get_47_GUITARList_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.GUITARList)instance;
            return that.NavigationHelper;
        }
        private object get_48_VIOLINList_VIOLINModel(object instance)
        {
            var that = (global::AppStudio.Views.VIOLINList)instance;
            return that.VIOLINModel;
        }
        private object get_49_VIOLINList_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.VIOLINList)instance;
            return that.NavigationHelper;
        }
        private object get_50_KEYBOARDList_KEYBOARDModel(object instance)
        {
            var that = (global::AppStudio.Views.KEYBOARDList)instance;
            return that.KEYBOARDModel;
        }
        private object get_51_KEYBOARDList_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.KEYBOARDList)instance;
            return that.NavigationHelper;
        }
        private object get_52_DRUMSList_DRUMSModel(object instance)
        {
            var that = (global::AppStudio.Views.DRUMSList)instance;
            return that.DRUMSModel;
        }
        private object get_53_DRUMSList_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.DRUMSList)instance;
            return that.NavigationHelper;
        }
        private object get_54_GUITARDetail_GUITARModel(object instance)
        {
            var that = (global::AppStudio.Views.GUITARDetail)instance;
            return that.GUITARModel;
        }
        private object get_55_GUITARDetail_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.GUITARDetail)instance;
            return that.NavigationHelper;
        }
        private object get_56_VIOLINDetail_VIOLINModel(object instance)
        {
            var that = (global::AppStudio.Views.VIOLINDetail)instance;
            return that.VIOLINModel;
        }
        private object get_57_VIOLINDetail_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.VIOLINDetail)instance;
            return that.NavigationHelper;
        }
        private object get_58_KEYBOARDDetail_KEYBOARDModel(object instance)
        {
            var that = (global::AppStudio.Views.KEYBOARDDetail)instance;
            return that.KEYBOARDModel;
        }
        private object get_59_KEYBOARDDetail_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.KEYBOARDDetail)instance;
            return that.NavigationHelper;
        }
        private object get_60_DRUMSDetail_DRUMSModel(object instance)
        {
            var that = (global::AppStudio.Views.DRUMSDetail)instance;
            return that.DRUMSModel;
        }
        private object get_61_DRUMSDetail_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.DRUMSDetail)instance;
            return that.NavigationHelper;
        }
        private object get_62_MUsIcNEWSList_MUsIcNEWSModel(object instance)
        {
            var that = (global::AppStudio.Views.MUsIcNEWSList)instance;
            return that.MUsIcNEWSModel;
        }
        private object get_63_MUsIcNEWSList_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.MUsIcNEWSList)instance;
            return that.NavigationHelper;
        }
        private object get_64_MUsIcNEWSDetail_MUsIcNEWSModel(object instance)
        {
            var that = (global::AppStudio.Views.MUsIcNEWSDetail)instance;
            return that.MUsIcNEWSModel;
        }
        private object get_65_MUsIcNEWSDetail_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.MUsIcNEWSDetail)instance;
            return that.NavigationHelper;
        }
        private object get_66_ViSuAlSList_ViSuAlSModel(object instance)
        {
            var that = (global::AppStudio.Views.ViSuAlSList)instance;
            return that.ViSuAlSModel;
        }
        private object get_67_ViSuAlSList_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.ViSuAlSList)instance;
            return that.NavigationHelper;
        }
        private object get_68_ViSuAlSDetail_ViSuAlSModel(object instance)
        {
            var that = (global::AppStudio.Views.ViSuAlSDetail)instance;
            return that.ViSuAlSModel;
        }
        private object get_69_ViSuAlSDetail_NavigationHelper(object instance)
        {
            var that = (global::AppStudio.Views.ViSuAlSDetail)instance;
            return that.NavigationHelper;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember xamlMember = null;
            global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "AppStudio.Controls.Html2Xaml.Properties.Html":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.Html2Xaml.Properties");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "Html", "String");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_0_Properties_Html;
                xamlMember.Setter = set_0_Properties_Html;
                break;
            case "AppStudio.Commands.ItemClickCommand.Command":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Commands.ItemClickCommand");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_1_ItemClickCommand_Command;
                xamlMember.Setter = set_1_ItemClickCommand_Command;
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_2_Interaction_Behaviors;
                xamlMember.Setter = set_2_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Actions":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_DataTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Binding":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "Binding", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_DataTriggerBehavior_Binding;
                xamlMember.Setter = set_4_DataTriggerBehavior_Binding;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.ComparisonCondition":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "ComparisonCondition", "Microsoft.Xaml.Interactions.Core.ComparisonConditionType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_DataTriggerBehavior_ComparisonCondition;
                xamlMember.Setter = set_5_DataTriggerBehavior_ComparisonCondition;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Value":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "Value", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_DataTriggerBehavior_Value;
                xamlMember.Setter = set_6_DataTriggerBehavior_Value;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.AssociatedObject":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_7_DataTriggerBehavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.GoToStateAction.StateName":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.GoToStateAction");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "StateName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_GoToStateAction_StateName;
                xamlMember.Setter = set_8_GoToStateAction_StateName;
                break;
            case "Microsoft.Xaml.Interactions.Core.GoToStateAction.UseTransitions":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.GoToStateAction");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "UseTransitions", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_GoToStateAction_UseTransitions;
                xamlMember.Setter = set_9_GoToStateAction_UseTransitions;
                break;
            case "Microsoft.Xaml.Interactions.Core.GoToStateAction.TargetObject":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.GoToStateAction");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "TargetObject", "Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_GoToStateAction_TargetObject;
                xamlMember.Setter = set_10_GoToStateAction_TargetObject;
                break;
            case "AppStudio.Controls.YouTubeViewer.TitleText":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.YouTubeViewer");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "TitleText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_YouTubeViewer_TitleText;
                xamlMember.Setter = set_11_YouTubeViewer_TitleText;
                break;
            case "AppStudio.Controls.YouTubeViewer.SummaryText":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.YouTubeViewer");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "SummaryText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_YouTubeViewer_SummaryText;
                xamlMember.Setter = set_12_YouTubeViewer_SummaryText;
                break;
            case "AppStudio.Controls.YouTubeViewer.EmbedUrl":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.YouTubeViewer");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "EmbedUrl", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_YouTubeViewer_EmbedUrl;
                xamlMember.Setter = set_13_YouTubeViewer_EmbedUrl;
                break;
            case "AppStudio.Controls.YouTubeViewer.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.YouTubeViewer");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_14_YouTubeViewer_NavigationHelper;
                xamlMember.Setter = set_14_YouTubeViewer_NavigationHelper;
                break;
            case "AppStudio.Controls.YouTubeViewer.NetworkAvailable":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.YouTubeViewer");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NetworkAvailable", "Boolean");
                xamlMember.Getter = get_15_YouTubeViewer_NetworkAvailable;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Controls.WebControl.Html":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.WebControl");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "Html", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_WebControl_Html;
                xamlMember.Setter = set_16_WebControl_Html;
                break;
            case "AppStudio.Controls.WebControl.Source":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Controls.WebControl");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "Source", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_WebControl_Source;
                xamlMember.Setter = set_17_WebControl_Source;
                break;
            case "AppStudio.Views.AboutFlyout.AboutThisAppModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.AboutFlyout");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "AboutThisAppModel", "AppStudio.ViewModels.AboutThisAppViewModel");
                xamlMember.Getter = get_18_AboutFlyout_AboutThisAppModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.PrivacyFlyout.PrivacyViewModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.PrivacyFlyout");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "PrivacyViewModel", "AppStudio.ViewModels.PrivacyViewModel");
                xamlMember.Getter = get_19_PrivacyFlyout_PrivacyViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.ImageViewer.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.ImageViewer");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_20_ImageViewer_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Advertising.WinRT.UI.AdControl.ApplicationId":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Advertising.WinRT.UI.AdControl");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "ApplicationId", "String");
                xamlMember.Getter = get_21_AdControl_ApplicationId;
                xamlMember.Setter = set_21_AdControl_ApplicationId;
                break;
            case "Microsoft.Advertising.WinRT.UI.AdControl.AdUnitId":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Advertising.WinRT.UI.AdControl");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "AdUnitId", "String");
                xamlMember.Getter = get_22_AdControl_AdUnitId;
                xamlMember.Setter = set_22_AdControl_AdUnitId;
                break;
            case "Microsoft.Advertising.WinRT.UI.AdControl.Latitude":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Advertising.WinRT.UI.AdControl");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "Latitude", "Double");
                xamlMember.Getter = get_23_AdControl_Latitude;
                xamlMember.Setter = set_23_AdControl_Latitude;
                break;
            case "Microsoft.Advertising.WinRT.UI.AdControl.Longitude":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Advertising.WinRT.UI.AdControl");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "Longitude", "Double");
                xamlMember.Getter = get_24_AdControl_Longitude;
                xamlMember.Setter = set_24_AdControl_Longitude;
                break;
            case "Microsoft.Advertising.WinRT.UI.AdControl.IsEngaged":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Advertising.WinRT.UI.AdControl");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "IsEngaged", "Boolean");
                xamlMember.Getter = get_25_AdControl_IsEngaged;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Advertising.WinRT.UI.AdControl.IsAutoRefreshEnabled":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Advertising.WinRT.UI.AdControl");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "IsAutoRefreshEnabled", "Boolean");
                xamlMember.Getter = get_26_AdControl_IsAutoRefreshEnabled;
                xamlMember.Setter = set_26_AdControl_IsAutoRefreshEnabled;
                break;
            case "Microsoft.Advertising.WinRT.UI.AdControl.IsSuspended":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Advertising.WinRT.UI.AdControl");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "IsSuspended", "Boolean");
                xamlMember.Getter = get_27_AdControl_IsSuspended;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MainPage.MainViewModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MainPage");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "MainViewModel", "AppStudio.ViewModels.MainViewModel");
                xamlMember.Getter = get_28_MainPage_MainViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MainPage.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MainPage");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_29_MainPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.GUITARPage.GUITARModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.GUITARPage");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "GUITARModel", "AppStudio.ViewModels.GUITARViewModel");
                xamlMember.Getter = get_30_GUITARPage_GUITARModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.GUITARPage.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.GUITARPage");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_31_GUITARPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.VIOLINPage.VIOLINModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.VIOLINPage");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "VIOLINModel", "AppStudio.ViewModels.VIOLINViewModel");
                xamlMember.Getter = get_32_VIOLINPage_VIOLINModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.VIOLINPage.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.VIOLINPage");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_33_VIOLINPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.KEYBOARDPage.KEYBOARDModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.KEYBOARDPage");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "KEYBOARDModel", "AppStudio.ViewModels.KEYBOARDViewModel");
                xamlMember.Getter = get_34_KEYBOARDPage_KEYBOARDModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.KEYBOARDPage.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.KEYBOARDPage");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_35_KEYBOARDPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.DRUMSPage.DRUMSModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.DRUMSPage");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "DRUMSModel", "AppStudio.ViewModels.DRUMSViewModel");
                xamlMember.Getter = get_36_DRUMSPage_DRUMSModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.DRUMSPage.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.DRUMSPage");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_37_DRUMSPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MUSICALINSTRUMENTSList.MUSICALINSTRUMENTSModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MUSICALINSTRUMENTSList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "MUSICALINSTRUMENTSModel", "AppStudio.ViewModels.MUSICALINSTRUMENTSViewModel");
                xamlMember.Getter = get_38_MUSICALINSTRUMENTSList_MUSICALINSTRUMENTSModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MUSICALINSTRUMENTSList.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MUSICALINSTRUMENTSList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_39_MUSICALINSTRUMENTSList_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MUSICALINSTRUMENTSDetail.MUSICALINSTRUMENTSModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MUSICALINSTRUMENTSDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "MUSICALINSTRUMENTSModel", "AppStudio.ViewModels.MUSICALINSTRUMENTSViewModel");
                xamlMember.Getter = get_40_MUSICALINSTRUMENTSDetail_MUSICALINSTRUMENTSModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MUSICALINSTRUMENTSDetail.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MUSICALINSTRUMENTSDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_41_MUSICALINSTRUMENTSDetail_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.TYPESOFINSTRUMENTSList.TYPESOFINSTRUMENTSModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.TYPESOFINSTRUMENTSList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "TYPESOFINSTRUMENTSModel", "AppStudio.ViewModels.TYPESOFINSTRUMENTSViewModel");
                xamlMember.Getter = get_42_TYPESOFINSTRUMENTSList_TYPESOFINSTRUMENTSModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.TYPESOFINSTRUMENTSList.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.TYPESOFINSTRUMENTSList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_43_TYPESOFINSTRUMENTSList_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.TYPESOFINSTRUMENTSDetail.TYPESOFINSTRUMENTSModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.TYPESOFINSTRUMENTSDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "TYPESOFINSTRUMENTSModel", "AppStudio.ViewModels.TYPESOFINSTRUMENTSViewModel");
                xamlMember.Getter = get_44_TYPESOFINSTRUMENTSDetail_TYPESOFINSTRUMENTSModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.TYPESOFINSTRUMENTSDetail.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.TYPESOFINSTRUMENTSDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_45_TYPESOFINSTRUMENTSDetail_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.GUITARList.GUITARModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.GUITARList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "GUITARModel", "AppStudio.ViewModels.GUITARViewModel");
                xamlMember.Getter = get_46_GUITARList_GUITARModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.GUITARList.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.GUITARList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_47_GUITARList_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.VIOLINList.VIOLINModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.VIOLINList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "VIOLINModel", "AppStudio.ViewModels.VIOLINViewModel");
                xamlMember.Getter = get_48_VIOLINList_VIOLINModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.VIOLINList.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.VIOLINList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_49_VIOLINList_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.KEYBOARDList.KEYBOARDModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.KEYBOARDList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "KEYBOARDModel", "AppStudio.ViewModels.KEYBOARDViewModel");
                xamlMember.Getter = get_50_KEYBOARDList_KEYBOARDModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.KEYBOARDList.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.KEYBOARDList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_51_KEYBOARDList_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.DRUMSList.DRUMSModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.DRUMSList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "DRUMSModel", "AppStudio.ViewModels.DRUMSViewModel");
                xamlMember.Getter = get_52_DRUMSList_DRUMSModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.DRUMSList.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.DRUMSList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_53_DRUMSList_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.GUITARDetail.GUITARModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.GUITARDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "GUITARModel", "AppStudio.ViewModels.GUITARViewModel");
                xamlMember.Getter = get_54_GUITARDetail_GUITARModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.GUITARDetail.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.GUITARDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_55_GUITARDetail_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.VIOLINDetail.VIOLINModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.VIOLINDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "VIOLINModel", "AppStudio.ViewModels.VIOLINViewModel");
                xamlMember.Getter = get_56_VIOLINDetail_VIOLINModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.VIOLINDetail.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.VIOLINDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_57_VIOLINDetail_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.KEYBOARDDetail.KEYBOARDModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.KEYBOARDDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "KEYBOARDModel", "AppStudio.ViewModels.KEYBOARDViewModel");
                xamlMember.Getter = get_58_KEYBOARDDetail_KEYBOARDModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.KEYBOARDDetail.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.KEYBOARDDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_59_KEYBOARDDetail_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.DRUMSDetail.DRUMSModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.DRUMSDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "DRUMSModel", "AppStudio.ViewModels.DRUMSViewModel");
                xamlMember.Getter = get_60_DRUMSDetail_DRUMSModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.DRUMSDetail.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.DRUMSDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_61_DRUMSDetail_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MUsIcNEWSList.MUsIcNEWSModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MUsIcNEWSList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "MUsIcNEWSModel", "AppStudio.ViewModels.MUsIcNEWSViewModel");
                xamlMember.Getter = get_62_MUsIcNEWSList_MUsIcNEWSModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MUsIcNEWSList.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MUsIcNEWSList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_63_MUsIcNEWSList_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MUsIcNEWSDetail.MUsIcNEWSModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MUsIcNEWSDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "MUsIcNEWSModel", "AppStudio.ViewModels.MUsIcNEWSViewModel");
                xamlMember.Getter = get_64_MUsIcNEWSDetail_MUsIcNEWSModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.MUsIcNEWSDetail.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.MUsIcNEWSDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_65_MUsIcNEWSDetail_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.ViSuAlSList.ViSuAlSModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.ViSuAlSList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "ViSuAlSModel", "AppStudio.ViewModels.ViSuAlSViewModel");
                xamlMember.Getter = get_66_ViSuAlSList_ViSuAlSModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.ViSuAlSList.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.ViSuAlSList");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_67_ViSuAlSList_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.ViSuAlSDetail.ViSuAlSModel":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.ViSuAlSDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "ViSuAlSModel", "AppStudio.ViewModels.ViSuAlSViewModel");
                xamlMember.Getter = get_68_ViSuAlSDetail_ViSuAlSModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Views.ViSuAlSDetail.NavigationHelper":
                userType = (global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Views.ViSuAlSDetail");
                xamlMember = new global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.NavigationHelper");
                xamlMember.Getter = get_69_ViSuAlSDetail_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlSystemBaseType
    {
        global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::AppStudio.AppStudio_Windows_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


